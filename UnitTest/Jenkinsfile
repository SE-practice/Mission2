pipeline {
    agent any

    tools {
        jdk 'JDK_1.8'  // Jenkins 관리 페이지에서 설정한 JDK 이름과 일치해야 합니다.
    }

    stages {
        stage('Checkout') {
            steps {
                // 소스코드 체크아웃
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // 클래스 파일을 저장할 디렉토리 생성
                sh 'mkdir -p classes'
                // Java 파일 컴파일
                sh 'javac -encoding UTF-8 -classpath "libs/*" -d classes UnitTest/src/*.java'
            }
        }

        stage('Test') {
            steps {
                script {
                    // JUnit 5 테스트 실행을 위한 classpath 설정
                    def junitJarPath = "libs/${env.JUNIT_JAR}"
                    def classpath = "classes:${junitJarPath}"
                    // JUnit 5 테스트 실행
                    sh "java -jar ${junitJarPath} --classpath ${classpath} --scan-classpath > test_results.txt"
                }
            }
        }
    }

    post {
        always {
            // 테스트 결과 파일 아카이브
            archiveArtifacts artifacts: 'test_results.txt', allowEmptyArchive: true
        }
        failure {
            echo 'Build or test failed'
        }
        success {
            echo 'Build and test succeeded'
        }
    }
}
